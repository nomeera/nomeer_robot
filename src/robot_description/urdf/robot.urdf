<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robot.xacro                    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="nomeer_robot">
  <!-- base_link -->
  <link name="base_link">
    <visual name="base_link">
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.35"/>
      <geometry>
        <box size="0.8 0.6 0.5"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.35"/>
      <geometry>
        <box size="0.8 0.6 0.5"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.35"/>
      <mass value="10"/>
      <inertia ixx="0.5083333333333333" ixy="0.0" ixz="0.0" iyy="0.7416666666666667" iyz="0.0" izz="0.8333333333333333"/>
    </inertial>
  </link>
  <!-- Gazebo Material -->
  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>
  <!-- body_link -->
  <link name="body_link">
    <visual name="body_link">
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="1.0 0.6 0.175"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="1.0 0.6 0.175"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <mass value="2"/>
      <inertia ixx="0.06510416666666666" ixy="0.0" ixz="0.0" iyy="0.17177083333333332" iyz="0.0" izz="0.22666666666666663"/>
    </inertial>
  </link>
  <!-- Gazebo Material -->
  <gazebo reference="body_link">
    <material>Gazebo/White</material>
  </gazebo>
  <!-- lidar_link -->
  <link name="lidar_link">
    <visual name="lidar_link">
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <!-- Gazebo Material -->
  <gazebo reference="lidar_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- camera_link -->
  <link name="camera_link">
    <visual name="camera_link">
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
      <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>
  <!-- Gazebo Material -->
  <gazebo reference="camera_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  <!-- caster_link -->
  <link name="caster_link">
    <visual name="caster_link">
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.06"/>
      </geometry>
      <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.06"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <mass value="0.3"/>
      <inertia ixx="0.000432" ixy="0.0" ixz="0.0" iyy="0.000432" iyz="0.0" izz="0.000432"/>
    </inertial>
  </link>
  <!-- Gazebo Material -->
  <gazebo reference="caster_link">
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- ${position}_wheel_link -->
  <link name="right_wheel_link">
    <visual name="right_wheel_link">
      <origin rpy="1.5707 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <cylinder length="0.08" radius="0.1"/>
      </geometry>
      <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <cylinder length="0.08" radius="0.1"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.5707 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <mass value="0.6"/>
      <inertia ixx="0.0018200000000000002" ixy="0.0" ixz="0.0" iyy="0.0018200000000000002" iyz="0.0" izz="0.0030000000000000005"/>
    </inertial>
  </link>
  <!-- Gazebo Material -->
  <gazebo reference="right_wheel_link">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- wheel transmission -->
  <transmission name="right_wheel_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_link">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_wheel_actuator">
      <mechanicalReduction>1.0</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <!-- ${position}_wheel_link -->
  <link name="left_wheel_link">
    <visual name="left_wheel_link">
      <origin rpy="1.5707 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <cylinder length="0.08" radius="0.1"/>
      </geometry>
      <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <cylinder length="0.08" radius="0.1"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="1.5707 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <mass value="0.6"/>
      <inertia ixx="0.0018200000000000002" ixy="0.0" ixz="0.0" iyy="0.0018200000000000002" iyz="0.0" izz="0.0030000000000000005"/>
    </inertial>
  </link>
  <!-- Gazebo Material -->
  <gazebo reference="left_wheel_link">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <material>Gazebo/Blue</material>
  </gazebo>
  <!-- wheel transmission -->
  <transmission name="left_wheel_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_link">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_wheel_actuator">
      <mechanicalReduction>1.0</mechanicalReduction>
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </actuator>
  </transmission>
  <!--differential_drive_controller-->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <!-- Plugin update rate in Hz -->
      <updateRate>20</updateRate>
      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>right_wheel_base_joint</leftJoint>
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>left_wheel_base_joint</rightJoint>
      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34
            m -->
      <wheelSeparation>0.5</wheelSeparation>
      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>0.2</wheelDiameter>
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>1.0</wheelAcceleration>
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>5</wheelTorque>
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>cmd_vel</commandTopic>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>odom</odometryTopic>
      <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>odom</odometryFrame>
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robotBaseFrame>base_link</robotBaseFrame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>world</odometrySource>
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>false</publishWheelTF>
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>true</publishOdom>
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel
            joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>
      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
      <broadcastTF>true</broadcastTF>
      <rosDebugLevel>na</rosDebugLevel>
      <publishOdomTF>true</publishOdomTF>
      <publishTf>1</publishTf>
    </plugin>
  </gazebo>
  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor name=" camera1" type="camera">
      <update_rate>30.0</update_rate>
      <visualize>true</visualize>
      <camera name=" head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename=" libgazebo_ros_camera.so" name=" camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>nomeer_robot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="lidar_link">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving " +-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- odom  base_link joint-->
  <link name="odom"/>
  <joint name="base_link_odom_joint" type="fixed">
    <parent link="odom"/>
    <child link="base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
  </joint>
  <!-- joins according to base -->
  <!-- body joint -->
  <joint name="body_base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="body_link"/>
    <origin rpy="0.0 1.5708 0.0" xyz="-0.3125 0.0 1.1"/>
  </joint>
  <!-- right_wheel joint -->
  <joint name="right_wheel_base_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="-0.25 0.25 0.1"/>
    <axis xyz="0.0 1.0 0.0"/>
  </joint>
  <!-- left_wheel joint -->
  <joint name="left_wheel_base_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="-0.25 -0.25 0.1"/>
    <axis xyz="0.0 1.0 0.0"/>
  </joint>
  <!-- caster joint -->
  <joint name="caster_base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.25 0.0 0.07"/>
  </joint>
  <!-- lidar joint -->
  <joint name="lidar_base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.4 0.0 0.3"/>
  </joint>
  <!-- camera joint -->
  <joint name="camera_base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="-0.225 0.0 1.4"/>
  </joint>
</robot>

